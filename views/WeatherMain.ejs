<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <title>天气小助手</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/css/bootstrap.min.css" integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">
    <link rel="stylesheet" href="/stylesheets/weather.css" \>
</head>
<body>
<div style="display: flex; flex-direction: column; align-items: center; width: 100%">
    <div class="card-frame" id="currentLocation">
        <p class="text-center my-1" style="font-size: 20px">
            <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-cursor-fill mb-1" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd" d="M14.082 2.182a.5.5 0 0 1 .103.557L8.528 15.467a.5.5 0 0 1-.917-.007L5.57 10.694.803 8.652a.5.5 0 0 1-.006-.916l12.728-5.657a.5.5 0 0 1 .556.103z"/>
            </svg>
            当前定位：{{curLocation}}
        </p>
    </div>
    <div class="container card-frame mt-0">
        <div class="row">
            日期
        </div>
        <div class="row">
            <div class="col-4">
                天气图标
            </div>
            <div class="col-4">
                温度
            </div>
            <div class="col-4">
                天气详情
            </div>
        </div>
        <div class="row" style="border-top-style: groove">
            <div class="col-4" style="border-right-style: groove">
                最近3天天气

            </div>
            <div class="col-4" style="border-right-style: groove">
                最近3天天气
            </div>
            <div class="col-4">
                最近3天天气
            </div>
        </div>
        <div class="row" style="border-top-style: groove">
             <div class="col-4" style="border-right-style: groove">
                 <iframe width="150" scrolling="no" height="65"  frameborder="0" allowtransparency="true" src=" https://api.seniverse.com/v3/weather/now.json?key=S-g6Gf70hb0xtIbOD&location=beijing&language=zh-Hans&unit=c&start=0&days=2">
                 </iframe>
             </div>
        </div>
    </div>
    <div class="container card-frame mt-0">
        <div class="row">
            <div class="col-10 text-center">
                <p class="my-4"> 空气质量：{{quality}}</p>
            </div>
            <div class="col-2">
                <p class="my-0 text-center" style="font-size: 45px">99</p>
            </div>
        </div>
    </div>
    <div class="card-frame mt-0">
        <div class="card text-center">
            <div class="card-header">
                <ul class="nav nav-tabs card-header-tabs">
                    <li class="nav-item" >
                        <a class="nav-link active" href="#temperature-pane" data-toggle="tab" >温度</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#humidity-pane" data-toggle="tab" >湿度</a>
                    </li>
                </ul>
            </div>
            <div class="card-body">
                <div class="tab-content">
                    <div class="tab-pane fade show active" id="temperature-pane">
                        <canvas id="temperature-chart" width="480" height="280"></canvas>
                    </div>
                    <div class="tab-pane fade" id="humidity-pane">
                        <canvas id="humidity-chart" width="480" height="280"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.min.js" integrity="sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/vue@2.6.11"></script>
<script src="/javascripts/Chart.js"></script>
<script>
    //getLocation
    var cityID;
    var locationApp = new Vue({
        el: "#currentLocation",
        data: {
            curLocation: "定位中"
        }
    });

    var hoursData = new Array(24);
    var cityName = new Promise(resolve => {
        if(navigator.geolocation){
            navigator.geolocation.getCurrentPosition(
                position => {
                    fetch("/getCityName?latitude=" + position.coords.latitude + "&longitude=" + position.coords.longitude)
                    .then(
                        response => {
                            return response.json();
                        }
                    ).then(
                        cityData => {
                            locationApp.curLocation = cityData.results[0].name;
                            resolve(cityData.results[0].id);
                        }
                    )
                }
            )
        }else {
            alert("获取定位失败");
        }
    });

    //Chart
    const date = new Date();
    const label = new Array(24);
    let i;
    for(i = 0; i < 24; i++){
        label[i] = (date.getHours() + i) % 24 +":00"
    }

    var temData = {
        labels: label,
        datasets: [
            {
                label: "温度",
                backgroundColor: "rgba(255,90,0,0.3)",
            }
        ]
    };

    var humData = {
        labels: label,
        datasets: [
            {
                label: "湿度",
                backgroundColor: "rgba(0,153,255,0.3)",
            }
        ]
    };

    function drawChart(temDatas, humDatas){
        temData.datasets[0].data = temDatas;
        let datas = temDatas.slice();
        datas.sort((a, b) => {return a-b;});
        humData.datasets[0].data = humDatas;
        const ctx1 = document.getElementById("temperature-chart").getContext("2d");
        const ctx2 = document.getElementById("humidity-chart").getContext("2d");
        new Chart(ctx1, {
            type: 'line',
            data: temData,
            options: {
                scales:{
                    yAxes:[
                        {
                            ticks: {
                                min: datas[0] - 3,
                                max: parseInt(datas[datas.length-1]) + 3,
                            }
                        }
                    ]
                }
            }
        });
        new Chart(ctx2, {
            type: 'line',
            data: humData
        })
    }

    cityName.then(
        cityID => {
            fetch("/get24?cityID=" + cityID)
            .then(
                response => {
                    return response.json();
                }
            ).then(
                charJson => {
                    const temData = new Array(24);
                    const humData = new Array(24);
                    for(let i = 0; i<24; i++){
                        temData[i] = charJson.results[0].hourly[i].temperature;
                        humData[i] = charJson.results[0].hourly[i].humidity;
                    }
                    drawChart(temData, humData);
                }
            )
        }
    )

            /*
    (function () {
        if(navigator.geolocation){
            navigator.geolocation.getCurrentPosition(
                position => {
                    cityPromise = fetch("/getCityName?latitude=" + position.coords.latitude + "&longitude=" + position.coords.longitude)
                    .then(
                        response => {return response.json()}
                    ).then(
                        cityName => {
                            locationApp.curLocation = cityName.results[0].name;
                            return  cityName.results[0].id;
                        }
                    ).then(
                        cityID => {
                            fetch("/get24?cityID=" + cityID)
                                .then(response => {
                                return response.json();
                                }).then(
                                hoursDatas => {
                                    var temData = new Array(24);
                                    var humData = new Array(24);
                                    for(let i = 0; i < 24; i++){
                                        temData[i] = hoursDatas.results[0].hourly[i].temperature;
                                        humData[i] = hoursDatas.results[0].hourly[i].humidity;
                                    }
                                    TemperatureData.datasets[0].data = temData;
                                    TemperatureData.datasets[1].data = humData;
                                    temperatureChart = new Chart(ctx, {
                                        type: 'line',
                                        data: TemperatureData
                                    })
                                }
                            )
                            return 88;
                        }
                    )
                }
                , () => {
                    alert("定位失败，请刷新");
                }
            );
        }
    })();
    */


</script>
</body>
</html>